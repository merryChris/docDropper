// Code generated by protoc-gen-go.
// source: platform.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	platform.proto

It has these top-level messages:
	CorpusRequest
	PlatReply
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CorpusRequest struct {
	Title   []string `protobuf:"bytes,1,rep,name=title" json:"title,omitempty"`
	Content []string `protobuf:"bytes,2,rep,name=content" json:"content,omitempty"`
}

func (m *CorpusRequest) Reset()                    { *m = CorpusRequest{} }
func (m *CorpusRequest) String() string            { return proto.CompactTextString(m) }
func (*CorpusRequest) ProtoMessage()               {}
func (*CorpusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CorpusRequest) GetTitle() []string {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CorpusRequest) GetContent() []string {
	if m != nil {
		return m.Content
	}
	return nil
}

type PlatReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PlatReply) Reset()                    { *m = PlatReply{} }
func (m *PlatReply) String() string            { return proto.CompactTextString(m) }
func (*PlatReply) ProtoMessage()               {}
func (*PlatReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PlatReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*CorpusRequest)(nil), "protos.CorpusRequest")
	proto.RegisterType((*PlatReply)(nil), "protos.PlatReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Platform service

type PlatformClient interface {
	Fit(ctx context.Context, opts ...grpc.CallOption) (Platform_FitClient, error)
}

type platformClient struct {
	cc *grpc.ClientConn
}

func NewPlatformClient(cc *grpc.ClientConn) PlatformClient {
	return &platformClient{cc}
}

func (c *platformClient) Fit(ctx context.Context, opts ...grpc.CallOption) (Platform_FitClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Platform_serviceDesc.Streams[0], c.cc, "/protos.Platform/Fit", opts...)
	if err != nil {
		return nil, err
	}
	x := &platformFitClient{stream}
	return x, nil
}

type Platform_FitClient interface {
	Send(*CorpusRequest) error
	CloseAndRecv() (*PlatReply, error)
	grpc.ClientStream
}

type platformFitClient struct {
	grpc.ClientStream
}

func (x *platformFitClient) Send(m *CorpusRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *platformFitClient) CloseAndRecv() (*PlatReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PlatReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Platform service

type PlatformServer interface {
	Fit(Platform_FitServer) error
}

func RegisterPlatformServer(s *grpc.Server, srv PlatformServer) {
	s.RegisterService(&_Platform_serviceDesc, srv)
}

func _Platform_Fit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PlatformServer).Fit(&platformFitServer{stream})
}

type Platform_FitServer interface {
	SendAndClose(*PlatReply) error
	Recv() (*CorpusRequest, error)
	grpc.ServerStream
}

type platformFitServer struct {
	grpc.ServerStream
}

func (x *platformFitServer) SendAndClose(m *PlatReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *platformFitServer) Recv() (*CorpusRequest, error) {
	m := new(CorpusRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Platform_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Platform",
	HandlerType: (*PlatformServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Fit",
			Handler:       _Platform_Fit_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "platform.proto",
}

func init() { proto.RegisterFile("platform.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0xc8, 0x49, 0x2c,
	0x49, 0xcb, 0x2f, 0xca, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a,
	0xf6, 0x5c, 0xbc, 0xce, 0xf9, 0x45, 0x05, 0xa5, 0xc5, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25,
	0x42, 0x22, 0x5c, 0xac, 0x25, 0x99, 0x25, 0x39, 0xa9, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0x9c, 0x41,
	0x10, 0x8e, 0x90, 0x04, 0x17, 0x7b, 0x72, 0x7e, 0x5e, 0x49, 0x6a, 0x5e, 0x89, 0x04, 0x13, 0x58,
	0x1c, 0xc6, 0x55, 0x52, 0xe5, 0xe2, 0x0c, 0x00, 0x1a, 0x1d, 0x94, 0x5a, 0x90, 0x53, 0x09, 0x52,
	0x96, 0x9b, 0x5a, 0x5c, 0x9c, 0x98, 0x0e, 0xd2, 0xce, 0x08, 0x52, 0x06, 0xe5, 0x1a, 0xd9, 0x73,
	0x71, 0x04, 0x40, 0x5d, 0x20, 0x64, 0xcc, 0xc5, 0xec, 0x96, 0x59, 0x22, 0x24, 0x0a, 0x71, 0x4a,
	0xb1, 0x1e, 0x8a, 0x03, 0xa4, 0x04, 0x61, 0xc2, 0x70, 0x63, 0x95, 0x18, 0x34, 0x18, 0x93, 0x20,
	0x0e, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xfa, 0x20, 0xe8, 0xc9, 0x00, 0x00, 0x00,
}
